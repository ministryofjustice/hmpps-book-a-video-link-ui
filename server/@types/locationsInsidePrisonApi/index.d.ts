/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
export interface paths {
  '/queue-admin/retry-dlq/{dlqName}': {
    put: operations['retryDlq']
  }
  '/queue-admin/retry-all-dlqs': {
    put: operations['retryAllDlqs']
  }
  '/queue-admin/purge-queue/{queueName}': {
    put: operations['purgeQueue']
  }
  '/locations/{id}/reactivate': {
    /**
     * Re-activate a location
     * @description Requires role MAINTAIN_LOCATIONS and write scope
     */
    put: operations['reactivateLocation']
  }
  '/locations/{id}/deactivate': {
    /**
     * Deactivate a location
     * @description Requires role MAINTAIN_LOCATIONS and write scope
     */
    put: operations['deactivateLocation']
  }
  '/sync/upsert': {
    /**
     * Upsert of a location
     * @description Requires role SYNC_LOCATIONS and write scope
     */
    post: operations['upsertLocation']
  }
  '/migrate/location': {
    /**
     * Migrate a location
     * @description Requires role MIGRATE_LOCATIONS and write scope
     */
    post: operations['migrateLocation']
  }
  '/locations/residential': {
    /**
     * Creates a residential location
     * @description Requires role MAINTAIN_LOCATIONS and write scope
     */
    post: operations['createResidentialLocation']
  }
  '/locations/non-residential': {
    /**
     * Creates a non-residential location
     * @description Requires role MAINTAIN_LOCATIONS and write scope
     */
    post: operations['createNonResidentialLocation']
  }
  '/locations/create-wing': {
    /**
     * Creates a residential wing with landings and cells
     * @description Requires role MAINTAIN_LOCATIONS and write scope
     */
    post: operations['createWing']
  }
  '/locations/{id}': {
    /**
     * Returns location information for this ID
     * @description Requires role VIEW_LOCATIONS
     */
    get: operations['getLocation']
    /**
     * Partial update of a location
     * @description Requires role MAINTAIN_LOCATIONS and write scope
     */
    patch: operations['patchLocation']
  }
  '/queue-admin/get-dlq-messages/{dlqName}': {
    get: operations['getDlqMessages']
  }
  '/locations': {
    /**
     * Get locations, filtered and paged
     * @description Requires VIEW_LOCATIONS role, max of 200 records per request
     */
    get: operations['getLocations']
  }
  '/locations/prison/{prisonId}': {
    /**
     * Return locations for this prison
     * @description Requires role VIEW_LOCATIONS
     */
    get: operations['getLocationForPrison']
  }
  '/locations/key/{key}': {
    /**
     * Returns location information for this key
     * @description Requires role VIEW_LOCATIONS
     */
    get: operations['getLocationByKey']
  }
  '/constants/residential-housing-type': {
    /**
     * Get residential housing reference data
     * @description Requires the READ_LOCATION_REFERENCE_DATA role.
     */
    get: operations['locationAttributeConstants']
  }
  '/constants/residential-attribute-type': {
    /**
     * Get residential attribute reference data
     * @description Requires the READ_LOCATION_REFERENCE_DATA role.
     */
    get: operations['residentialAttributeTypeConstants']
  }
  '/constants/non-residential-usage-type': {
    /**
     * Get non-residential usage reference data
     * @description Requires the READ_LOCATION_REFERENCE_DATA role.
     */
    get: operations['nonResidentialUsageTypeConstants']
  }
  '/constants/location-type': {
    /**
     * Get location reference data
     * @description Requires the READ_LOCATION_REFERENCE_DATA role.
     */
    get: operations['locationConstants']
  }
  '/constants/deactivated-reason': {
    /**
     * Get deactivated reason reference data
     * @description Requires the READ_LOCATION_REFERENCE_DATA role.
     */
    get: operations['deactivedReasonsConstants']
  }
  '/sync/delete/{id}': {
    /**
     * Delete a location
     * @description Requires role SYNC_LOCATIONS and write scope
     */
    delete: operations['deleteLocation']
  }
}

export type webhooks = Record<string, never>

export interface components {
  schemas: {
    DlqMessage: {
      body: {
        [key: string]: Record<string, never>
      }
      messageId: string
    }
    RetryDlqResult: {
      /** Format: int32 */
      messagesFoundCount: number
      messages: components['schemas']['DlqMessage'][]
    }
    PurgeQueueResult: {
      /** Format: int32 */
      messagesFoundCount: number
    }
    /** @description Error response */
    ErrorResponse: {
      /**
       * Format: int32
       * @description HTTP status code
       * @example 500
       */
      status: number
      /**
       * @description User message for the error
       * @example No location found for ID `de91dfa7-821f-4552-a427-bf2f32eafeb0`
       */
      userMessage: string
      /**
       * @description More detailed error message
       * @example [Details, sometimes a stack trace]
       */
      developerMessage: string
      /**
       * Format: int32
       * @description When present, uniquely identifies the type of error making it easier for clients to discriminate without relying on error description or HTTP status code; see `uk.gov.justice.digital.hmpps.locationsinsideprison.resources.ErrorCode` enumeration in hmpps-locations-inside-prison-api
       * @example 101
       */
      errorCode?: number
      /**
       * @description More information about the error
       * @example [Rarely used, error-specific]
       */
      moreInfo?: string
    }
    /** @description Capacity */
    Capacity: {
      /**
       * Format: int32
       * @description Max capacity of the location
       * @example 2
       */
      maxCapacity: number
      /**
       * Format: int32
       * @description Working capacity of the location
       * @example 2
       */
      workingCapacity: number
    }
    /** @description Certification */
    Certification: {
      /**
       * @description Indicates that this location is certified for use as a residential location
       * @example true
       */
      certified: boolean
      /**
       * Format: int32
       * @description Indicates the capacity of the certified location (cell)
       * @example 1
       */
      capacityOfCertifiedCell: number
    }
    /** @description Change History */
    ChangeHistory: {
      /**
       * @description Location Attribute
       * @example Location Type
       */
      attribute: string
      /**
       * @description Previous value of this attribute
       * @example CELL
       */
      oldValue?: string
      /**
       * @description New value of this attribute
       * @example WING
       */
      newValue?: string
      /**
       * @description User who made the change
       * @example user
       */
      amendedBy: string
      /**
       * @description Date the change was made
       * @example 2021-07-05T10:35:17
       */
      amendedDate: string
    }
    /** @description Location Information */
    Location: {
      /**
       * Format: uuid
       * @description Location Id
       * @example 2475f250-434a-4257-afe7-b911f1773a4d
       */
      id: string
      /**
       * @description Prison ID
       * @example MDI
       */
      prisonId: string
      /**
       * @description Location Code
       * @example 001
       */
      code: string
      /**
       * @description Full path of the location within the prison
       * @example A-1-001
       */
      pathHierarchy: string
      /**
       * @description Location Type
       * @example CELL
       * @enum {string}
       */
      locationType:
        | 'WING'
        | 'SPUR'
        | 'LANDING'
        | 'CELL'
        | 'ROOM'
        | 'HOLDING_AREA'
        | 'MOVEMENT_AREA'
        | 'RESIDENTIAL_UNIT'
        | 'EXTERNAL_GROUNDS'
        | 'HOLDING_CELL'
        | 'MEDICAL'
        | 'GROUP'
        | 'OFFICE'
        | 'ADMINISTRATION_AREA'
        | 'BOOTH'
        | 'BOX'
        | 'RETURN_TO_UNIT'
        | 'CLASSROOM'
        | 'TRAINING_AREA'
        | 'TRAINING_ROOM'
        | 'EXERCISE_AREA'
        | 'AREA'
        | 'SPORTS'
        | 'WORKSHOP'
        | 'INSIDE_PARTY'
        | 'OUTSIDE_PARTY'
        | 'FAITH_AREA'
        | 'ADJUDICATION_ROOM'
        | 'APPOINTMENTS'
        | 'VISITS'
        | 'VIDEO_LINK'
        | 'ASSOCIATION'
        | 'INTERNAL_GROUNDS'
        | 'INTERVIEW'
        | 'LOCATION'
        | 'POSITION'
        | 'SHELF'
        | 'STORE'
        | 'TABLE'
      /**
       * @description If residential location, its type
       * @example NORMAL_ACCOMMODATION
       * @enum {string}
       */
      residentialHousingType?:
        | 'NORMAL_ACCOMMODATION'
        | 'HEALTHCARE'
        | 'HOLDING_CELL'
        | 'OTHER_USE'
        | 'RECEPTION'
        | 'SEGREGATION'
        | 'SPECIALIST_CELL'
      /**
       * @description Alternative description to display for location
       * @example Wing A
       */
      localName?: string
      /**
       * @description Additional comments that can be made about this location
       * @example Not to be used
       */
      comments?: string
      /**
       * @description Indicates if the location is permanently inactive
       * @example false
       */
      permanentlyInactive: boolean
      capacity?: components['schemas']['Capacity']
      certification?: components['schemas']['Certification']
      /** @description Location Attributes */
      attributes?: (
        | 'ANTI_BARRICADE_DOOR'
        | 'AUDITABLE_CELL_BELL'
        | 'FIXED_BED'
        | 'METAL_DOOR'
        | 'MOVABLE_BED'
        | 'PRIVACY_CURTAIN'
        | 'PRIVACY_SCREEN'
        | 'STANDARD_CELL_BELL'
        | 'SEPARATE_TOILET'
        | 'WOODEN_DOOR'
        | 'CAT_A_CELL'
        | 'DOUBLE_OCCUPANCY'
        | 'E_LIST_CELL'
        | 'GATED_CELL'
        | 'LISTENER_CELL'
        | 'LOCATE_FLAT'
        | 'MULTIPLE_OCCUPANCY'
        | 'NON_SMOKER_CELL'
        | 'OBSERVATION_CELL'
        | 'SAFE_CELL'
        | 'SINGLE_OCCUPANCY'
        | 'SPECIAL_CELL'
        | 'WHEELCHAIR_ACCESS'
        | 'UNCONVICTED_JUVENILES'
        | 'SENTENCED_JUVENILES'
        | 'UNCONVICTED_18_20'
        | 'SENTENCED_18_20'
        | 'UNCONVICTED_ADULTS'
        | 'SENTENCED_ADULTS'
        | 'VULNERABLE_PRISONER_UNIT'
        | 'SPECIAL_UNIT'
        | 'RESETTLEMENT_HOSTEL'
        | 'HEALTHCARE_CENTRE'
        | 'NATIONAL_RESOURCE_HOSPITAL'
        | 'OTHER_SPECIFIED'
        | 'REMAND_CENTRE'
        | 'LOCAL_PRISON'
        | 'CLOSED_PRISON'
        | 'OPEN_TRAINING'
        | 'HOSTEL'
        | 'CLOSED_YOUNG_OFFENDER'
        | 'OPEN_YOUNG_OFFENDER'
        | 'REMAND_UNDER_18'
        | 'SENTENCED_UNDER_18'
        | 'ECL_COMPONENT'
        | 'ADDITIONAL_SPECIAL_UNIT'
        | 'SECOND_CLOSED_TRAINER'
        | 'IMMIGRATION_DETAINEES'
        | 'CELL'
        | 'LANDING'
        | 'WING'
        | 'CAT_A'
        | 'CAT_A_EX'
        | 'CAT_A_HI'
        | 'CAT_B'
        | 'CAT_C'
        | 'CAT_D'
        | 'ELIGIBLE'
        | 'PAROLE_GRANTED'
        | 'INELIGIBLE'
        | 'YOI_CLOSED'
        | 'YOI_OPEN'
        | 'YOI_RESTRICTED'
        | 'YOI_SHORT_SENTENCE'
        | 'YOI_LONG_TERM_CLOSED'
        | 'UNCLASSIFIED'
        | 'UNCATEGORISED_SENTENCED_MALE'
        | 'LOW'
        | 'MEDIUM'
        | 'HIGH'
        | 'NOT_APPLICABLE'
        | 'PROV_A'
        | 'PENDING'
        | 'REF_REVIEW'
        | 'REFUSED_NO_REVIEW'
        | 'STANDARD'
        | 'FEMALE_RESTRICTED'
        | 'FEMALE_CLOSED'
        | 'FEMALE_SEMI'
        | 'FEMALE_OPEN'
        | 'UN_SENTENCED'
        | 'YES'
        | 'NO'
      )[]
      /** @description Location Usage */
      usage?: components['schemas']['NonResidentialUsageDto'][]
      /**
       * Format: int32
       * @description Sequence of locations within the current parent location
       * @example 1
       */
      orderWithinParentLocation?: number
      /**
       * @description Indicates the location is enabled
       * @example true
       */
      active: boolean
      /**
       * @description Indicates the location in inactive as a parent is deactivated
       * @example false
       */
      deactivatedByParent: boolean
      /**
       * Format: date
       * @description Date the location was deactivated
       * @example 2023-01-23
       */
      deactivatedDate?: string
      /**
       * @description Reason for deactivation
       * @example DAMAGED
       * @enum {string}
       */
      deactivatedReason?:
        | 'NEW_BUILDING'
        | 'CELL_RECLAIMS'
        | 'CHANGE_OF_USE'
        | 'REFURBISHMENT'
        | 'CLOSURE'
        | 'OTHER'
        | 'LOCAL_WORK'
        | 'STAFF_SHORTAGE'
        | 'MOTHBALLED'
        | 'DAMAGED'
        | 'OUT_OF_USE'
        | 'CELLS_RETURNING_TO_USE'
      /**
       * Format: date
       * @description Proposed Date for location reactivation
       * @example 2026-01-24
       */
      proposedReactivationDate?: string
      /**
       * Format: uuid
       * @description Top Level Location Id
       * @example 57718979-573c-433a-9e51-2d83f887c11c
       */
      topLevelId: string
      /**
       * Format: uuid
       * @description Parent Location Id
       * @example 57718979-573c-433a-9e51-2d83f887c11c
       */
      parentId?: string
      parentLocation?: components['schemas']['Location']
      /** @description Child Locations */
      childLocations?: components['schemas']['Location'][]
      /** @description History of changes */
      changeHistory?: components['schemas']['ChangeHistory'][]
      /**
       * @description Business Key for a location
       * @example MDI-A-1-001
       */
      key: string
      /**
       * @description Indicates if the location is a residential location
       * @example true
       */
      isResidential: boolean
    }
    /** @description Non Residential Usage */
    NonResidentialUsageDto: {
      /** @enum {string} */
      usageType:
        | 'APPOINTMENT'
        | 'VISIT'
        | 'MOVEMENT'
        | 'OCCURRENCE'
        | 'ADJUDICATION_HEARING'
        | 'PROGRAMMES_ACTIVITIES'
        | 'PROPERTY'
        | 'OTHER'
      /** Format: int32 */
      capacity?: number
      /** Format: int32 */
      sequence: number
    }
    /** @description Request to deactivate a location */
    DeactivationLocationRequest: {
      /**
       * @description Reason for deactivation
       * @example DAMAGED
       * @enum {string}
       */
      deactivationReason:
        | 'NEW_BUILDING'
        | 'CELL_RECLAIMS'
        | 'CHANGE_OF_USE'
        | 'REFURBISHMENT'
        | 'CLOSURE'
        | 'OTHER'
        | 'LOCAL_WORK'
        | 'STAFF_SHORTAGE'
        | 'MOTHBALLED'
        | 'DAMAGED'
        | 'OUT_OF_USE'
        | 'CELLS_RETURNING_TO_USE'
      /**
       * Format: date
       * @description Proposed re-activation date
       * @example 2025-01-05
       */
      proposedReactivationDate?: string
    }
    /** @description Request to upsert/sync a location from NOMIS to the Locations API */
    NomisSyncLocationRequest: {
      /**
       * Format: uuid
       * @description Location UUID, provided if already exists
       * @example 2475f250-434a-4257-afe7-b911f1773a4d
       */
      id?: string
      /**
       * @description Prison ID where the location is situated
       * @example MDI
       */
      prisonId: string
      /**
       * @description Code of the location
       * @example 001
       */
      code: string
      /**
       * @description Location Type
       * @example CELL
       * @enum {string}
       */
      locationType:
        | 'WING'
        | 'SPUR'
        | 'LANDING'
        | 'CELL'
        | 'ROOM'
        | 'HOLDING_AREA'
        | 'MOVEMENT_AREA'
        | 'RESIDENTIAL_UNIT'
        | 'EXTERNAL_GROUNDS'
        | 'HOLDING_CELL'
        | 'MEDICAL'
        | 'GROUP'
        | 'OFFICE'
        | 'ADMINISTRATION_AREA'
        | 'BOOTH'
        | 'BOX'
        | 'RETURN_TO_UNIT'
        | 'CLASSROOM'
        | 'TRAINING_AREA'
        | 'TRAINING_ROOM'
        | 'EXERCISE_AREA'
        | 'AREA'
        | 'SPORTS'
        | 'WORKSHOP'
        | 'INSIDE_PARTY'
        | 'OUTSIDE_PARTY'
        | 'FAITH_AREA'
        | 'ADJUDICATION_ROOM'
        | 'APPOINTMENTS'
        | 'VISITS'
        | 'VIDEO_LINK'
        | 'ASSOCIATION'
        | 'INTERNAL_GROUNDS'
        | 'INTERVIEW'
        | 'LOCATION'
        | 'POSITION'
        | 'SHELF'
        | 'STORE'
        | 'TABLE'
      /**
       * @description Alternative description to display for location
       * @example Wing A
       */
      localName?: string
      /**
       * @description Additional comments that can be made about this location
       * @example Not to be used
       */
      comments?: string
      /**
       * Format: int32
       * @description Sequence of locations within the current parent location
       * @example 1
       */
      orderWithinParentLocation?: number
      /**
       * @description If residential location, its type
       * @example NORMAL_ACCOMMODATION
       * @enum {string}
       */
      residentialHousingType?:
        | 'NORMAL_ACCOMMODATION'
        | 'HEALTHCARE'
        | 'HOLDING_CELL'
        | 'OTHER_USE'
        | 'RECEPTION'
        | 'SEGREGATION'
        | 'SPECIALIST_CELL'
      /**
       * @description Reason for deactivation
       * @example DAMAGED
       * @enum {string}
       */
      deactivationReason?:
        | 'NEW_BUILDING'
        | 'CELL_RECLAIMS'
        | 'CHANGE_OF_USE'
        | 'REFURBISHMENT'
        | 'CLOSURE'
        | 'OTHER'
        | 'LOCAL_WORK'
        | 'STAFF_SHORTAGE'
        | 'MOTHBALLED'
        | 'DAMAGED'
        | 'OUT_OF_USE'
        | 'CELLS_RETURNING_TO_USE'
      /**
       * Format: date
       * @description Proposed re-activation date
       * @example 2025-01-05
       */
      proposedReactivationDate?: string
      /**
       * Format: date
       * @description Date deactivation occurred
       * @example 2023-01-05
       */
      deactivatedDate?: string
      /**
       * @description Path hierarchy of the parent (if one exists)
       * @example A-1
       */
      parentLocationPath?: string
      /**
       * Format: uuid
       * @description Parent UUID of the parent location (if one exists)
       * @example 2475f250-434a-4257-afe7-b911f1773a4e
       */
      parentId?: string
      capacity?: components['schemas']['Capacity']
      certification?: components['schemas']['Certification']
      /** @description Location Attributes */
      attributes?: (
        | 'ANTI_BARRICADE_DOOR'
        | 'AUDITABLE_CELL_BELL'
        | 'FIXED_BED'
        | 'METAL_DOOR'
        | 'MOVABLE_BED'
        | 'PRIVACY_CURTAIN'
        | 'PRIVACY_SCREEN'
        | 'STANDARD_CELL_BELL'
        | 'SEPARATE_TOILET'
        | 'WOODEN_DOOR'
        | 'CAT_A_CELL'
        | 'DOUBLE_OCCUPANCY'
        | 'E_LIST_CELL'
        | 'GATED_CELL'
        | 'LISTENER_CELL'
        | 'LOCATE_FLAT'
        | 'MULTIPLE_OCCUPANCY'
        | 'NON_SMOKER_CELL'
        | 'OBSERVATION_CELL'
        | 'SAFE_CELL'
        | 'SINGLE_OCCUPANCY'
        | 'SPECIAL_CELL'
        | 'WHEELCHAIR_ACCESS'
        | 'UNCONVICTED_JUVENILES'
        | 'SENTENCED_JUVENILES'
        | 'UNCONVICTED_18_20'
        | 'SENTENCED_18_20'
        | 'UNCONVICTED_ADULTS'
        | 'SENTENCED_ADULTS'
        | 'VULNERABLE_PRISONER_UNIT'
        | 'SPECIAL_UNIT'
        | 'RESETTLEMENT_HOSTEL'
        | 'HEALTHCARE_CENTRE'
        | 'NATIONAL_RESOURCE_HOSPITAL'
        | 'OTHER_SPECIFIED'
        | 'REMAND_CENTRE'
        | 'LOCAL_PRISON'
        | 'CLOSED_PRISON'
        | 'OPEN_TRAINING'
        | 'HOSTEL'
        | 'CLOSED_YOUNG_OFFENDER'
        | 'OPEN_YOUNG_OFFENDER'
        | 'REMAND_UNDER_18'
        | 'SENTENCED_UNDER_18'
        | 'ECL_COMPONENT'
        | 'ADDITIONAL_SPECIAL_UNIT'
        | 'SECOND_CLOSED_TRAINER'
        | 'IMMIGRATION_DETAINEES'
        | 'CELL'
        | 'LANDING'
        | 'WING'
        | 'CAT_A'
        | 'CAT_A_EX'
        | 'CAT_A_HI'
        | 'CAT_B'
        | 'CAT_C'
        | 'CAT_D'
        | 'ELIGIBLE'
        | 'PAROLE_GRANTED'
        | 'INELIGIBLE'
        | 'YOI_CLOSED'
        | 'YOI_OPEN'
        | 'YOI_RESTRICTED'
        | 'YOI_SHORT_SENTENCE'
        | 'YOI_LONG_TERM_CLOSED'
        | 'UNCLASSIFIED'
        | 'UNCATEGORISED_SENTENCED_MALE'
        | 'LOW'
        | 'MEDIUM'
        | 'HIGH'
        | 'NOT_APPLICABLE'
        | 'PROV_A'
        | 'PENDING'
        | 'REF_REVIEW'
        | 'REFUSED_NO_REVIEW'
        | 'STANDARD'
        | 'FEMALE_RESTRICTED'
        | 'FEMALE_CLOSED'
        | 'FEMALE_SEMI'
        | 'FEMALE_OPEN'
        | 'UN_SENTENCED'
        | 'YES'
        | 'NO'
      )[]
      /** @description Location Usage */
      usage?: components['schemas']['NonResidentialUsageDto'][]
      /**
       * @description Date location was created, if not provided then the current time will be used for a new location
       * @example 2021-07-05T10:35:17
       */
      createDate?: string
      /**
       * @description Last updated, if not provided then the current time will be used
       * @example 2021-07-05T10:35:17
       */
      lastModifiedDate?: string
      /** @description Username of the staff updating the location */
      lastUpdatedBy: string
      isCell: boolean
      isDeactivated: boolean
    }
    /** @description Request to migrate a location and it's history */
    NomisMigrateLocationRequest: {
      /**
       * @description Prison ID where the location is situated
       * @example MDI
       */
      prisonId: string
      /**
       * @description Code of the location
       * @example 001
       */
      code: string
      /**
       * @description Location Type
       * @example CELL
       * @enum {string}
       */
      locationType:
        | 'WING'
        | 'SPUR'
        | 'LANDING'
        | 'CELL'
        | 'ROOM'
        | 'HOLDING_AREA'
        | 'MOVEMENT_AREA'
        | 'RESIDENTIAL_UNIT'
        | 'EXTERNAL_GROUNDS'
        | 'HOLDING_CELL'
        | 'MEDICAL'
        | 'GROUP'
        | 'OFFICE'
        | 'ADMINISTRATION_AREA'
        | 'BOOTH'
        | 'BOX'
        | 'RETURN_TO_UNIT'
        | 'CLASSROOM'
        | 'TRAINING_AREA'
        | 'TRAINING_ROOM'
        | 'EXERCISE_AREA'
        | 'AREA'
        | 'SPORTS'
        | 'WORKSHOP'
        | 'INSIDE_PARTY'
        | 'OUTSIDE_PARTY'
        | 'FAITH_AREA'
        | 'ADJUDICATION_ROOM'
        | 'APPOINTMENTS'
        | 'VISITS'
        | 'VIDEO_LINK'
        | 'ASSOCIATION'
        | 'INTERNAL_GROUNDS'
        | 'INTERVIEW'
        | 'LOCATION'
        | 'POSITION'
        | 'SHELF'
        | 'STORE'
        | 'TABLE'
      /**
       * @description Alternative description to display for location
       * @example Wing A
       */
      localName?: string
      /**
       * @description Additional comments that can be made about this location
       * @example Not to be used
       */
      comments?: string
      /**
       * Format: int32
       * @description Sequence of locations within the current parent location
       * @example 1
       */
      orderWithinParentLocation?: number
      /**
       * @description If residential location, its type
       * @example NORMAL_ACCOMMODATION
       * @enum {string}
       */
      residentialHousingType?:
        | 'NORMAL_ACCOMMODATION'
        | 'HEALTHCARE'
        | 'HOLDING_CELL'
        | 'OTHER_USE'
        | 'RECEPTION'
        | 'SEGREGATION'
        | 'SPECIALIST_CELL'
      /**
       * @description Reason for deactivation
       * @example DAMAGED
       * @enum {string}
       */
      deactivationReason?:
        | 'NEW_BUILDING'
        | 'CELL_RECLAIMS'
        | 'CHANGE_OF_USE'
        | 'REFURBISHMENT'
        | 'CLOSURE'
        | 'OTHER'
        | 'LOCAL_WORK'
        | 'STAFF_SHORTAGE'
        | 'MOTHBALLED'
        | 'DAMAGED'
        | 'OUT_OF_USE'
        | 'CELLS_RETURNING_TO_USE'
      /**
       * Format: date
       * @description Proposed re-activation date
       * @example 2025-01-05
       */
      proposedReactivationDate?: string
      /**
       * Format: date
       * @description Date deactivation occurred
       * @example 2023-01-05
       */
      deactivatedDate?: string
      /**
       * @description Path hierarchy of the parent (if one exists)
       * @example A-1
       */
      parentLocationPath?: string
      /**
       * Format: uuid
       * @description Parent UUID of the parent location (if one exists)
       * @example 2475f250-434a-4257-afe7-b911f1773a4e
       */
      parentId?: string
      capacity?: components['schemas']['Capacity']
      certification?: components['schemas']['Certification']
      /** @description Location Attributes */
      attributes?: (
        | 'ANTI_BARRICADE_DOOR'
        | 'AUDITABLE_CELL_BELL'
        | 'FIXED_BED'
        | 'METAL_DOOR'
        | 'MOVABLE_BED'
        | 'PRIVACY_CURTAIN'
        | 'PRIVACY_SCREEN'
        | 'STANDARD_CELL_BELL'
        | 'SEPARATE_TOILET'
        | 'WOODEN_DOOR'
        | 'CAT_A_CELL'
        | 'DOUBLE_OCCUPANCY'
        | 'E_LIST_CELL'
        | 'GATED_CELL'
        | 'LISTENER_CELL'
        | 'LOCATE_FLAT'
        | 'MULTIPLE_OCCUPANCY'
        | 'NON_SMOKER_CELL'
        | 'OBSERVATION_CELL'
        | 'SAFE_CELL'
        | 'SINGLE_OCCUPANCY'
        | 'SPECIAL_CELL'
        | 'WHEELCHAIR_ACCESS'
        | 'UNCONVICTED_JUVENILES'
        | 'SENTENCED_JUVENILES'
        | 'UNCONVICTED_18_20'
        | 'SENTENCED_18_20'
        | 'UNCONVICTED_ADULTS'
        | 'SENTENCED_ADULTS'
        | 'VULNERABLE_PRISONER_UNIT'
        | 'SPECIAL_UNIT'
        | 'RESETTLEMENT_HOSTEL'
        | 'HEALTHCARE_CENTRE'
        | 'NATIONAL_RESOURCE_HOSPITAL'
        | 'OTHER_SPECIFIED'
        | 'REMAND_CENTRE'
        | 'LOCAL_PRISON'
        | 'CLOSED_PRISON'
        | 'OPEN_TRAINING'
        | 'HOSTEL'
        | 'CLOSED_YOUNG_OFFENDER'
        | 'OPEN_YOUNG_OFFENDER'
        | 'REMAND_UNDER_18'
        | 'SENTENCED_UNDER_18'
        | 'ECL_COMPONENT'
        | 'ADDITIONAL_SPECIAL_UNIT'
        | 'SECOND_CLOSED_TRAINER'
        | 'IMMIGRATION_DETAINEES'
        | 'CELL'
        | 'LANDING'
        | 'WING'
        | 'CAT_A'
        | 'CAT_A_EX'
        | 'CAT_A_HI'
        | 'CAT_B'
        | 'CAT_C'
        | 'CAT_D'
        | 'ELIGIBLE'
        | 'PAROLE_GRANTED'
        | 'INELIGIBLE'
        | 'YOI_CLOSED'
        | 'YOI_OPEN'
        | 'YOI_RESTRICTED'
        | 'YOI_SHORT_SENTENCE'
        | 'YOI_LONG_TERM_CLOSED'
        | 'UNCLASSIFIED'
        | 'UNCATEGORISED_SENTENCED_MALE'
        | 'LOW'
        | 'MEDIUM'
        | 'HIGH'
        | 'NOT_APPLICABLE'
        | 'PROV_A'
        | 'PENDING'
        | 'REF_REVIEW'
        | 'REFUSED_NO_REVIEW'
        | 'STANDARD'
        | 'FEMALE_RESTRICTED'
        | 'FEMALE_CLOSED'
        | 'FEMALE_SEMI'
        | 'FEMALE_OPEN'
        | 'UN_SENTENCED'
        | 'YES'
        | 'NO'
      )[]
      /** @description Location Usage */
      usage?: components['schemas']['NonResidentialUsageDto'][]
      /**
       * @description Date location was created, if not provided then the current time will be used for a new location
       * @example 2021-07-05T10:35:17
       */
      createDate?: string
      /**
       * @description Last updated, if not provided then the current time will be used
       * @example 2021-07-05T10:35:17
       */
      lastModifiedDate?: string
      /** @description Username of the staff updating the location */
      lastUpdatedBy: string
      /** @description History of changes to the location */
      history?: components['schemas']['ChangeHistory'][]
      isCell: boolean
      isDeactivated: boolean
    }
    /** @description Request to create a location */
    CreateResidentialLocationRequest: {
      /**
       * @description Prison ID where the location is situated
       * @example MDI
       */
      prisonId: string
      /**
       * @description Code of the location
       * @example 001
       */
      code: string
      /**
       * @description residential location type
       * @example NORMAL_ACCOMMODATION
       * @enum {string}
       */
      residentialHousingType:
        | 'NORMAL_ACCOMMODATION'
        | 'HEALTHCARE'
        | 'HOLDING_CELL'
        | 'OTHER_USE'
        | 'RECEPTION'
        | 'SEGREGATION'
        | 'SPECIALIST_CELL'
      /**
       * @description Location Type
       * @example CELL
       * @enum {string}
       */
      locationType:
        | 'WING'
        | 'SPUR'
        | 'LANDING'
        | 'CELL'
        | 'ROOM'
        | 'HOLDING_AREA'
        | 'MOVEMENT_AREA'
        | 'RESIDENTIAL_UNIT'
        | 'EXTERNAL_GROUNDS'
        | 'HOLDING_CELL'
        | 'MEDICAL'
        | 'GROUP'
        | 'OFFICE'
        | 'ADMINISTRATION_AREA'
        | 'BOOTH'
        | 'BOX'
        | 'RETURN_TO_UNIT'
        | 'CLASSROOM'
        | 'TRAINING_AREA'
        | 'TRAINING_ROOM'
        | 'EXERCISE_AREA'
        | 'AREA'
        | 'SPORTS'
        | 'WORKSHOP'
        | 'INSIDE_PARTY'
        | 'OUTSIDE_PARTY'
        | 'FAITH_AREA'
        | 'ADJUDICATION_ROOM'
        | 'APPOINTMENTS'
        | 'VISITS'
        | 'VIDEO_LINK'
        | 'ASSOCIATION'
        | 'INTERNAL_GROUNDS'
        | 'INTERVIEW'
        | 'LOCATION'
        | 'POSITION'
        | 'SHELF'
        | 'STORE'
        | 'TABLE'
      /**
       * @description Alternative description to display for location
       * @example Wing A
       */
      localName?: string
      /**
       * @description Additional comments that can be made about this location
       * @example Not to be used
       */
      comments?: string
      /**
       * Format: int32
       * @description Sequence of locations within the current parent location
       * @example 1
       */
      orderWithinParentLocation?: number
      /**
       * Format: uuid
       * @description ID of parent location
       * @example c73e8ad1-191b-42b8-bfce-2550cc858dab
       */
      parentId?: string
      capacity?: components['schemas']['Capacity']
      certification?: components['schemas']['Certification']
      /** @description Location Attributes */
      attributes?: (
        | 'ANTI_BARRICADE_DOOR'
        | 'AUDITABLE_CELL_BELL'
        | 'FIXED_BED'
        | 'METAL_DOOR'
        | 'MOVABLE_BED'
        | 'PRIVACY_CURTAIN'
        | 'PRIVACY_SCREEN'
        | 'STANDARD_CELL_BELL'
        | 'SEPARATE_TOILET'
        | 'WOODEN_DOOR'
        | 'CAT_A_CELL'
        | 'DOUBLE_OCCUPANCY'
        | 'E_LIST_CELL'
        | 'GATED_CELL'
        | 'LISTENER_CELL'
        | 'LOCATE_FLAT'
        | 'MULTIPLE_OCCUPANCY'
        | 'NON_SMOKER_CELL'
        | 'OBSERVATION_CELL'
        | 'SAFE_CELL'
        | 'SINGLE_OCCUPANCY'
        | 'SPECIAL_CELL'
        | 'WHEELCHAIR_ACCESS'
        | 'UNCONVICTED_JUVENILES'
        | 'SENTENCED_JUVENILES'
        | 'UNCONVICTED_18_20'
        | 'SENTENCED_18_20'
        | 'UNCONVICTED_ADULTS'
        | 'SENTENCED_ADULTS'
        | 'VULNERABLE_PRISONER_UNIT'
        | 'SPECIAL_UNIT'
        | 'RESETTLEMENT_HOSTEL'
        | 'HEALTHCARE_CENTRE'
        | 'NATIONAL_RESOURCE_HOSPITAL'
        | 'OTHER_SPECIFIED'
        | 'REMAND_CENTRE'
        | 'LOCAL_PRISON'
        | 'CLOSED_PRISON'
        | 'OPEN_TRAINING'
        | 'HOSTEL'
        | 'CLOSED_YOUNG_OFFENDER'
        | 'OPEN_YOUNG_OFFENDER'
        | 'REMAND_UNDER_18'
        | 'SENTENCED_UNDER_18'
        | 'ECL_COMPONENT'
        | 'ADDITIONAL_SPECIAL_UNIT'
        | 'SECOND_CLOSED_TRAINER'
        | 'IMMIGRATION_DETAINEES'
        | 'CELL'
        | 'LANDING'
        | 'WING'
        | 'CAT_A'
        | 'CAT_A_EX'
        | 'CAT_A_HI'
        | 'CAT_B'
        | 'CAT_C'
        | 'CAT_D'
        | 'ELIGIBLE'
        | 'PAROLE_GRANTED'
        | 'INELIGIBLE'
        | 'YOI_CLOSED'
        | 'YOI_OPEN'
        | 'YOI_RESTRICTED'
        | 'YOI_SHORT_SENTENCE'
        | 'YOI_LONG_TERM_CLOSED'
        | 'UNCLASSIFIED'
        | 'UNCATEGORISED_SENTENCED_MALE'
        | 'LOW'
        | 'MEDIUM'
        | 'HIGH'
        | 'NOT_APPLICABLE'
        | 'PROV_A'
        | 'PENDING'
        | 'REF_REVIEW'
        | 'REFUSED_NO_REVIEW'
        | 'STANDARD'
        | 'FEMALE_RESTRICTED'
        | 'FEMALE_CLOSED'
        | 'FEMALE_SEMI'
        | 'FEMALE_OPEN'
        | 'UN_SENTENCED'
        | 'YES'
        | 'NO'
      )[]
      isCell: boolean
    }
    /** @description Request to create a non-residential location */
    CreateNonResidentialLocationRequest: {
      /**
       * @description Prison ID where the location is situated
       * @example MDI
       */
      prisonId: string
      /**
       * @description Code of the location
       * @example ADJ
       */
      code: string
      /**
       * @description Location Type
       * @example ADJUDICATION_ROOM
       * @enum {string}
       */
      locationType:
        | 'WING'
        | 'SPUR'
        | 'LANDING'
        | 'CELL'
        | 'ROOM'
        | 'HOLDING_AREA'
        | 'MOVEMENT_AREA'
        | 'RESIDENTIAL_UNIT'
        | 'EXTERNAL_GROUNDS'
        | 'HOLDING_CELL'
        | 'MEDICAL'
        | 'GROUP'
        | 'OFFICE'
        | 'ADMINISTRATION_AREA'
        | 'BOOTH'
        | 'BOX'
        | 'RETURN_TO_UNIT'
        | 'CLASSROOM'
        | 'TRAINING_AREA'
        | 'TRAINING_ROOM'
        | 'EXERCISE_AREA'
        | 'AREA'
        | 'SPORTS'
        | 'WORKSHOP'
        | 'INSIDE_PARTY'
        | 'OUTSIDE_PARTY'
        | 'FAITH_AREA'
        | 'ADJUDICATION_ROOM'
        | 'APPOINTMENTS'
        | 'VISITS'
        | 'VIDEO_LINK'
        | 'ASSOCIATION'
        | 'INTERNAL_GROUNDS'
        | 'INTERVIEW'
        | 'LOCATION'
        | 'POSITION'
        | 'SHELF'
        | 'STORE'
        | 'TABLE'
      /**
       * @description Alternative description to display for location
       * @example Adj Room
       */
      localName?: string
      /**
       * @description Additional comments that can be made about this location
       * @example Not to be used
       */
      comments?: string
      /**
       * Format: int32
       * @description Sequence of locations within the current parent location
       * @example 1
       */
      orderWithinParentLocation?: number
      /**
       * Format: uuid
       * @description ID of parent location
       * @example c73e8ad1-191b-42b8-bfce-2550cc858dab
       */
      parentId?: string
      /** @description Location Usage */
      usage?: components['schemas']['NonResidentialUsageDto'][]
      isCell: boolean
    }
    /** @description Request to create a wing */
    CreateWingRequest: {
      /**
       * @description Prison ID where the location is situated
       * @example MDI
       */
      prisonId: string
      /**
       * @description Code assigned to a wing
       * @example B
       */
      wingCode: string
      /**
       * @description Alternative description to display for location
       * @example Wing A
       */
      wingDescription?: string
      /**
       * Format: int32
       * @description Number of landings required
       * @example 3
       */
      numberOfLandings?: number
      /**
       * Format: int32
       * @description Number of spurs required
       * @example 2
       */
      numberOfSpursPerLanding?: number
      /**
       * Format: int32
       * @description Number of cells required in each section (wing,landing or spur)
       * @example 40
       */
      numberOfCellsPerSection: number
      /**
       * Format: int32
       * @description Default Cell Capacity
       * @default 1
       * @example 1
       */
      defaultCellCapacity: number
      /**
       * @description Default set of attributes
       * @example SINGLE_OCCUPANCY
       */
      defaultAttributesOfCells?: (
        | 'ANTI_BARRICADE_DOOR'
        | 'AUDITABLE_CELL_BELL'
        | 'FIXED_BED'
        | 'METAL_DOOR'
        | 'MOVABLE_BED'
        | 'PRIVACY_CURTAIN'
        | 'PRIVACY_SCREEN'
        | 'STANDARD_CELL_BELL'
        | 'SEPARATE_TOILET'
        | 'WOODEN_DOOR'
        | 'CAT_A_CELL'
        | 'DOUBLE_OCCUPANCY'
        | 'E_LIST_CELL'
        | 'GATED_CELL'
        | 'LISTENER_CELL'
        | 'LOCATE_FLAT'
        | 'MULTIPLE_OCCUPANCY'
        | 'NON_SMOKER_CELL'
        | 'OBSERVATION_CELL'
        | 'SAFE_CELL'
        | 'SINGLE_OCCUPANCY'
        | 'SPECIAL_CELL'
        | 'WHEELCHAIR_ACCESS'
        | 'UNCONVICTED_JUVENILES'
        | 'SENTENCED_JUVENILES'
        | 'UNCONVICTED_18_20'
        | 'SENTENCED_18_20'
        | 'UNCONVICTED_ADULTS'
        | 'SENTENCED_ADULTS'
        | 'VULNERABLE_PRISONER_UNIT'
        | 'SPECIAL_UNIT'
        | 'RESETTLEMENT_HOSTEL'
        | 'HEALTHCARE_CENTRE'
        | 'NATIONAL_RESOURCE_HOSPITAL'
        | 'OTHER_SPECIFIED'
        | 'REMAND_CENTRE'
        | 'LOCAL_PRISON'
        | 'CLOSED_PRISON'
        | 'OPEN_TRAINING'
        | 'HOSTEL'
        | 'CLOSED_YOUNG_OFFENDER'
        | 'OPEN_YOUNG_OFFENDER'
        | 'REMAND_UNDER_18'
        | 'SENTENCED_UNDER_18'
        | 'ECL_COMPONENT'
        | 'ADDITIONAL_SPECIAL_UNIT'
        | 'SECOND_CLOSED_TRAINER'
        | 'IMMIGRATION_DETAINEES'
        | 'CELL'
        | 'LANDING'
        | 'WING'
        | 'CAT_A'
        | 'CAT_A_EX'
        | 'CAT_A_HI'
        | 'CAT_B'
        | 'CAT_C'
        | 'CAT_D'
        | 'ELIGIBLE'
        | 'PAROLE_GRANTED'
        | 'INELIGIBLE'
        | 'YOI_CLOSED'
        | 'YOI_OPEN'
        | 'YOI_RESTRICTED'
        | 'YOI_SHORT_SENTENCE'
        | 'YOI_LONG_TERM_CLOSED'
        | 'UNCLASSIFIED'
        | 'UNCATEGORISED_SENTENCED_MALE'
        | 'LOW'
        | 'MEDIUM'
        | 'HIGH'
        | 'NOT_APPLICABLE'
        | 'PROV_A'
        | 'PENDING'
        | 'REF_REVIEW'
        | 'REFUSED_NO_REVIEW'
        | 'STANDARD'
        | 'FEMALE_RESTRICTED'
        | 'FEMALE_CLOSED'
        | 'FEMALE_SEMI'
        | 'FEMALE_OPEN'
        | 'UN_SENTENCED'
        | 'YES'
        | 'NO'
      )[]
    }
    /** @description Request to update a location */
    PatchLocationRequest: {
      /**
       * @description Code of the location
       * @example 001
       */
      code: string
      /**
       * @description Location Type
       * @example CELL
       * @enum {string}
       */
      locationType:
        | 'WING'
        | 'SPUR'
        | 'LANDING'
        | 'CELL'
        | 'ROOM'
        | 'HOLDING_AREA'
        | 'MOVEMENT_AREA'
        | 'RESIDENTIAL_UNIT'
        | 'EXTERNAL_GROUNDS'
        | 'HOLDING_CELL'
        | 'MEDICAL'
        | 'GROUP'
        | 'OFFICE'
        | 'ADMINISTRATION_AREA'
        | 'BOOTH'
        | 'BOX'
        | 'RETURN_TO_UNIT'
        | 'CLASSROOM'
        | 'TRAINING_AREA'
        | 'TRAINING_ROOM'
        | 'EXERCISE_AREA'
        | 'AREA'
        | 'SPORTS'
        | 'WORKSHOP'
        | 'INSIDE_PARTY'
        | 'OUTSIDE_PARTY'
        | 'FAITH_AREA'
        | 'ADJUDICATION_ROOM'
        | 'APPOINTMENTS'
        | 'VISITS'
        | 'VIDEO_LINK'
        | 'ASSOCIATION'
        | 'INTERNAL_GROUNDS'
        | 'INTERVIEW'
        | 'LOCATION'
        | 'POSITION'
        | 'SHELF'
        | 'STORE'
        | 'TABLE'
      /**
       * @description Alternative description to display for location
       * @example Wing A
       */
      localName?: string
      /**
       * @description Additional comments that can be made about this location
       * @example Not to be used
       */
      comments?: string
      /**
       * Format: int32
       * @description Sequence of locations within the current parent location
       * @example 1
       */
      orderWithinParentLocation?: number
      /**
       * @description If residential location, its type
       * @example NORMAL_ACCOMMODATION
       * @enum {string}
       */
      residentialHousingType?:
        | 'NORMAL_ACCOMMODATION'
        | 'HEALTHCARE'
        | 'HOLDING_CELL'
        | 'OTHER_USE'
        | 'RECEPTION'
        | 'SEGREGATION'
        | 'SPECIALIST_CELL'
      /**
       * Format: uuid
       * @description ID of parent location
       * @example c73e8ad1-191b-42b8-bfce-2550cc858dab
       */
      parentId?: string
      capacity?: components['schemas']['Capacity']
      certification?: components['schemas']['Certification']
      /** @description Location Attributes */
      attributes?: (
        | 'ANTI_BARRICADE_DOOR'
        | 'AUDITABLE_CELL_BELL'
        | 'FIXED_BED'
        | 'METAL_DOOR'
        | 'MOVABLE_BED'
        | 'PRIVACY_CURTAIN'
        | 'PRIVACY_SCREEN'
        | 'STANDARD_CELL_BELL'
        | 'SEPARATE_TOILET'
        | 'WOODEN_DOOR'
        | 'CAT_A_CELL'
        | 'DOUBLE_OCCUPANCY'
        | 'E_LIST_CELL'
        | 'GATED_CELL'
        | 'LISTENER_CELL'
        | 'LOCATE_FLAT'
        | 'MULTIPLE_OCCUPANCY'
        | 'NON_SMOKER_CELL'
        | 'OBSERVATION_CELL'
        | 'SAFE_CELL'
        | 'SINGLE_OCCUPANCY'
        | 'SPECIAL_CELL'
        | 'WHEELCHAIR_ACCESS'
        | 'UNCONVICTED_JUVENILES'
        | 'SENTENCED_JUVENILES'
        | 'UNCONVICTED_18_20'
        | 'SENTENCED_18_20'
        | 'UNCONVICTED_ADULTS'
        | 'SENTENCED_ADULTS'
        | 'VULNERABLE_PRISONER_UNIT'
        | 'SPECIAL_UNIT'
        | 'RESETTLEMENT_HOSTEL'
        | 'HEALTHCARE_CENTRE'
        | 'NATIONAL_RESOURCE_HOSPITAL'
        | 'OTHER_SPECIFIED'
        | 'REMAND_CENTRE'
        | 'LOCAL_PRISON'
        | 'CLOSED_PRISON'
        | 'OPEN_TRAINING'
        | 'HOSTEL'
        | 'CLOSED_YOUNG_OFFENDER'
        | 'OPEN_YOUNG_OFFENDER'
        | 'REMAND_UNDER_18'
        | 'SENTENCED_UNDER_18'
        | 'ECL_COMPONENT'
        | 'ADDITIONAL_SPECIAL_UNIT'
        | 'SECOND_CLOSED_TRAINER'
        | 'IMMIGRATION_DETAINEES'
        | 'CELL'
        | 'LANDING'
        | 'WING'
        | 'CAT_A'
        | 'CAT_A_EX'
        | 'CAT_A_HI'
        | 'CAT_B'
        | 'CAT_C'
        | 'CAT_D'
        | 'ELIGIBLE'
        | 'PAROLE_GRANTED'
        | 'INELIGIBLE'
        | 'YOI_CLOSED'
        | 'YOI_OPEN'
        | 'YOI_RESTRICTED'
        | 'YOI_SHORT_SENTENCE'
        | 'YOI_LONG_TERM_CLOSED'
        | 'UNCLASSIFIED'
        | 'UNCATEGORISED_SENTENCED_MALE'
        | 'LOW'
        | 'MEDIUM'
        | 'HIGH'
        | 'NOT_APPLICABLE'
        | 'PROV_A'
        | 'PENDING'
        | 'REF_REVIEW'
        | 'REFUSED_NO_REVIEW'
        | 'STANDARD'
        | 'FEMALE_RESTRICTED'
        | 'FEMALE_CLOSED'
        | 'FEMALE_SEMI'
        | 'FEMALE_OPEN'
        | 'UN_SENTENCED'
        | 'YES'
        | 'NO'
      )[]
      /** @description Location Usage */
      usage?: components['schemas']['NonResidentialUsageDto'][]
      /**
       * @description Reason for deactivation
       * @example DAMAGED
       * @enum {string}
       */
      deactivationReason?:
        | 'NEW_BUILDING'
        | 'CELL_RECLAIMS'
        | 'CHANGE_OF_USE'
        | 'REFURBISHMENT'
        | 'CLOSURE'
        | 'OTHER'
        | 'LOCAL_WORK'
        | 'STAFF_SHORTAGE'
        | 'MOTHBALLED'
        | 'DAMAGED'
        | 'OUT_OF_USE'
        | 'CELLS_RETURNING_TO_USE'
      /**
       * Format: date
       * @description Proposed re-activation date
       * @example 2025-01-05
       */
      proposedReactivationDate?: string
      /**
       * Format: date
       * @description Date deactivation occurred
       * @example 2023-01-05
       */
      deactivatedDate?: string
      isCell: boolean
      isDeactivated: boolean
    }
    GetDlqResult: {
      /** Format: int32 */
      messagesFoundCount: number
      /** Format: int32 */
      messagesReturnedCount: number
      messages: components['schemas']['DlqMessage'][]
    }
    PageLocation: {
      /** Format: int32 */
      totalPages?: number
      /** Format: int64 */
      totalElements?: number
      first?: boolean
      last?: boolean
      /** Format: int32 */
      size?: number
      content?: components['schemas']['Location'][]
      /** Format: int32 */
      number?: number
      sort?: components['schemas']['SortObject'][]
      /** Format: int32 */
      numberOfElements?: number
      pageable?: components['schemas']['PageableObject']
      empty?: boolean
    }
    PageableObject: {
      /** Format: int64 */
      offset?: number
      sort?: components['schemas']['SortObject'][]
      /** Format: int32 */
      pageSize?: number
      /** Format: int32 */
      pageNumber?: number
      paged?: boolean
      unpaged?: boolean
    }
    SortObject: {
      direction?: string
      nullHandling?: string
      ascending?: boolean
      property?: string
      ignoreCase?: boolean
    }
    Constant: {
      key: string
      description: string
    }
    CompoundConstant: {
      key: string
      description: string
      values: components['schemas']['Constant'][]
    }
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}

export type $defs = Record<string, never>

export type external = Record<string, never>

export interface operations {
  retryDlq: {
    parameters: {
      path: {
        dlqName: string
      }
    }
    responses: {
      /** @description OK */
      200: {
        content: {
          '*/*': components['schemas']['RetryDlqResult']
        }
      }
    }
  }
  retryAllDlqs: {
    responses: {
      /** @description OK */
      200: {
        content: {
          '*/*': components['schemas']['RetryDlqResult'][]
        }
      }
    }
  }
  purgeQueue: {
    parameters: {
      path: {
        queueName: string
      }
    }
    responses: {
      /** @description OK */
      200: {
        content: {
          '*/*': components['schemas']['PurgeQueueResult']
        }
      }
    }
  }
  /**
   * Re-activate a location
   * @description Requires role MAINTAIN_LOCATIONS and write scope
   */
  reactivateLocation: {
    parameters: {
      path: {
        /**
         * @description The location Id
         * @example de91dfa7-821f-4552-a427-bf2f32eafeb0
         */
        id: string
      }
    }
    responses: {
      /** @description Returns updated location */
      200: {
        content: {
          'application/json': components['schemas']['Location']
        }
      }
      /** @description Invalid Request */
      400: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Missing required role. Requires the MAINTAIN_LOCATIONS role with write scope. */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Location not found */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Deactivate a location
   * @description Requires role MAINTAIN_LOCATIONS and write scope
   */
  deactivateLocation: {
    parameters: {
      path: {
        /**
         * @description The location Id
         * @example de91dfa7-821f-4552-a427-bf2f32eafeb0
         */
        id: string
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['DeactivationLocationRequest']
      }
    }
    responses: {
      /** @description Returns updated location */
      200: {
        content: {
          'application/json': components['schemas']['Location']
        }
      }
      /** @description Invalid Request */
      400: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Missing required role. Requires the MAINTAIN_LOCATIONS role with write scope. */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Location not found */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Upsert of a location
   * @description Requires role SYNC_LOCATIONS and write scope
   */
  upsertLocation: {
    requestBody: {
      content: {
        'application/json': components['schemas']['NomisSyncLocationRequest']
      }
    }
    responses: {
      /** @description Updated location */
      200: {
        content: {
          'application/json': components['schemas']['Location']
        }
      }
      /** @description Created location */
      201: {
        content: {
          'application/json': components['schemas']['Location']
        }
      }
      /** @description Invalid Request */
      400: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Missing required role. Requires the SYNC_LOCATIONS role with write scope. */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Data not found */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Migrate a location
   * @description Requires role MIGRATE_LOCATIONS and write scope
   */
  migrateLocation: {
    requestBody: {
      content: {
        'application/json': components['schemas']['NomisMigrateLocationRequest']
      }
    }
    responses: {
      /** @description Migrated location */
      201: {
        content: {
          'application/json': components['schemas']['Location']
        }
      }
      /** @description Invalid Request */
      400: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Missing required role. Requires the MIGRATE_LOCATIONS role with write scope. */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Data not found */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Creates a residential location
   * @description Requires role MAINTAIN_LOCATIONS and write scope
   */
  createResidentialLocation: {
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateResidentialLocationRequest']
      }
    }
    responses: {
      /** @description Returns created location */
      201: {
        content: {
          'application/json': components['schemas']['Location']
        }
      }
      /** @description Invalid Request */
      400: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Missing required role. Requires the MAINTAIN_LOCATIONS role with write scope. */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Data not found */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Location already exists */
      409: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Creates a non-residential location
   * @description Requires role MAINTAIN_LOCATIONS and write scope
   */
  createNonResidentialLocation: {
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateNonResidentialLocationRequest']
      }
    }
    responses: {
      /** @description Returns created location */
      201: {
        content: {
          'application/json': components['schemas']['Location']
        }
      }
      /** @description Invalid Request */
      400: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Missing required role. Requires the MAINTAIN_LOCATIONS role with write scope. */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Data not found */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Location already exists */
      409: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Creates a residential wing with landings and cells
   * @description Requires role MAINTAIN_LOCATIONS and write scope
   */
  createWing: {
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateWingRequest']
      }
    }
    responses: {
      /** @description Returns created locations */
      201: {
        content: {
          'application/json': components['schemas']['Location']
        }
      }
      /** @description Invalid Request */
      400: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Missing required role. Requires the MAINTAIN_LOCATIONS role with write scope. */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Location already exists */
      409: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Returns location information for this ID
   * @description Requires role VIEW_LOCATIONS
   */
  getLocation: {
    parameters: {
      query?: {
        includeChildren?: boolean
        includeHistory?: boolean
      }
      path: {
        /**
         * @description The location Id
         * @example de91dfa7-821f-4552-a427-bf2f32eafeb0
         */
        id: string
      }
    }
    responses: {
      /** @description Returns location */
      200: {
        content: {
          'application/json': components['schemas']['Location']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Missing required role. Requires the VIEW_LOCATIONS role */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Data not found */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Partial update of a location
   * @description Requires role MAINTAIN_LOCATIONS and write scope
   */
  patchLocation: {
    parameters: {
      path: {
        /**
         * @description The location Id
         * @example de91dfa7-821f-4552-a427-bf2f32eafeb0
         */
        id: string
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['PatchLocationRequest']
      }
    }
    responses: {
      /** @description Returns updated location */
      200: {
        content: {
          'application/json': components['schemas']['Location']
        }
      }
      /** @description Invalid Request */
      400: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Missing required role. Requires the MAINTAIN_LOCATIONS role with write scope. */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Data not found */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Location already exists */
      409: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getDlqMessages: {
    parameters: {
      query?: {
        maxMessages?: number
      }
      path: {
        dlqName: string
      }
    }
    responses: {
      /** @description OK */
      200: {
        content: {
          '*/*': components['schemas']['GetDlqResult']
        }
      }
    }
  }
  /**
   * Get locations, filtered and paged
   * @description Requires VIEW_LOCATIONS role, max of 200 records per request
   */
  getLocations: {
    parameters: {
      query?: {
        /** @description Zero-based page index (0..N) */
        page?: number
        /** @description The size of the page to be returned */
        size?: number
        /** @description Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
      }
    }
    responses: {
      /** @description A page of locations are returned */
      200: {
        content: {
          'application/json': components['schemas']['PageLocation']
        }
      }
      /** @description When input parameters are not valid */
      400: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Missing required role. Requires the VIEW_LOCATIONS role. */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Return locations for this prison
   * @description Requires role VIEW_LOCATIONS
   */
  getLocationForPrison: {
    parameters: {
      path: {
        /**
         * @description Prison Id
         * @example MDI
         */
        prisonId: string
      }
    }
    responses: {
      /** @description Returns locations */
      200: {
        content: {
          'application/json': components['schemas']['Location'][]
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Missing required role. Requires the VIEW_LOCATIONS role */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Data not found */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Returns location information for this key
   * @description Requires role VIEW_LOCATIONS
   */
  getLocationByKey: {
    parameters: {
      query?: {
        includeChildren?: boolean
        includeHistory?: boolean
      }
      path: {
        /**
         * @description Location Key
         * @example MDI-A-1-001
         */
        key: string
      }
    }
    responses: {
      /** @description Returns location */
      200: {
        content: {
          'application/json': components['schemas']['Location']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Missing required role. Requires the VIEW_LOCATIONS role */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Data not found */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Get residential housing reference data
   * @description Requires the READ_LOCATION_REFERENCE_DATA role.
   */
  locationAttributeConstants: {
    responses: {
      /** @description Returns location reference data */
      200: {
        content: {
          'application/json': {
            [key: string]: components['schemas']['Constant'][]
          }
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Missing required role. Requires the READ_LOCATION_REFERENCE_DATA role */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Get residential attribute reference data
   * @description Requires the READ_LOCATION_REFERENCE_DATA role.
   */
  residentialAttributeTypeConstants: {
    responses: {
      /** @description Returns residential attribute reference data */
      200: {
        content: {
          'application/json': {
            [key: string]: components['schemas']['CompoundConstant'][]
          }
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Missing required role. Requires the READ_LOCATION_REFERENCE_DATA role */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Get non-residential usage reference data
   * @description Requires the READ_LOCATION_REFERENCE_DATA role.
   */
  nonResidentialUsageTypeConstants: {
    responses: {
      /** @description Returns location reference data */
      200: {
        content: {
          'application/json': {
            [key: string]: components['schemas']['Constant'][]
          }
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Missing required role. Requires the READ_LOCATION_REFERENCE_DATA role */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Get location reference data
   * @description Requires the READ_LOCATION_REFERENCE_DATA role.
   */
  locationConstants: {
    responses: {
      /** @description Returns location reference data */
      200: {
        content: {
          'application/json': {
            [key: string]: components['schemas']['Constant'][]
          }
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Missing required role. Requires the READ_LOCATION_REFERENCE_DATA role */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Get deactivated reason reference data
   * @description Requires the READ_LOCATION_REFERENCE_DATA role.
   */
  deactivedReasonsConstants: {
    responses: {
      /** @description Returns location reference data */
      200: {
        content: {
          'application/json': {
            [key: string]: components['schemas']['Constant'][]
          }
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Missing required role. Requires the READ_LOCATION_REFERENCE_DATA role */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Delete a location
   * @description Requires role SYNC_LOCATIONS and write scope
   */
  deleteLocation: {
    parameters: {
      path: {
        /**
         * @description Location UUID to remove
         * @example 2475f250-434a-4257-afe7-b911f1773a4d
         */
        id: string
      }
    }
    responses: {
      /** @description Deleted location */
      204: {
        content: never
      }
      /** @description Invalid Request */
      400: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Missing required role. Requires the SYNC_LOCATIONS role with write scope. */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Data not found */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
}
