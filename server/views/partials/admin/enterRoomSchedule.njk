{% from "govuk/components/select/macro.njk" import govukSelect %}
{% from "govuk/components/radios/macro.njk" import govukRadios %}
{% from "components/hmppsTimePicker.njk" import hmppsTimePicker %}
{% from "govuk/components/checkboxes/macro.njk" import govukCheckboxes %}
{% from "partials/admin/selectCourtFromList.njk" import selectCourtFromList %}
{% from "partials/admin/selectProbationTeamFromList.njk" import selectProbationTeamFromList %}

{#
  Macro for the entry fields and components for a room schedule.
  Params:
    - mode: `first` (no schedules exist), `add` - (add another) or `amend` (change an existing)
    - prison:  Prison object (Prison)
    - room: Room object(LocationAttribute)
    - courts: A list of court objects
    - probationTeams: A list of probation team objects
    - formResponses: List of form data from validation middleware
    - validationErrors: List of form errors from validation middleware
#}

{% macro enterRoomSchedule(mode, prison, room, courts, probationTeams, formResponses, validationErrors) %}

    {% if mode == 'first' %}
        <input type="hidden" name="existingSchedule" value="false"/>
        <h2 class="govuk-heading-m">Add room schedule</h2>
    {% elseif mode == 'add' %}
        <input type="hidden" name="existingSchedule" value="true"/>
        <h2 class="govuk-heading-m">Enter schedule details</h2>
    {% else %}
        <input type="hidden" name="existingSchedule" value="true"/>
        <h2 class="govuk-heading-m">Amend a room schedule</h2>
    {% endif %}

    {# Start and end days #}

    {% set items = [
        { text: "Monday", value: 1 },
        { text: "Tuesday", value: 2 },
        { text: "Wednesday", value: 3 },
        { text: "Thursday", value: 4 },
        { text: "Friday", value: 5 },
        { text: "Saturday", value: 6 },
        { text: "Sunday", value: 7 }
      ]
    %}

    {{ govukSelect({
        name: "scheduleStartDay",
        id: "scheduleStartDay",
        items: items,
        label: {
            text: "Select start day"
        },
        errorMessage: validationErrors | findError("scheduleStartDay"),
        value: formResponses.scheduleStartDay,
        classes: "govuk-!-width-one-third"
    }) }}

    {{ govukSelect({
        name: "scheduleEndDay",
        id: "scheduleEndDay",
        items: items,
        label: {
            text: "Select end day"
        },
        errorMessage: validationErrors | findError("scheduleEndDay"),
        value: formResponses.scheduleEndDay,
        classes: "govuk-!-width-one-third"
    }) }}

    {# Conditionally revealed select list for courts #}

    {% set courtScheduleHtml %}
        {{  selectCourtFromList(courts, "scheduleCourtCodes", room, formResponses, validationErrors) }}
    {% endset -%}

    {# Conditionally revealed select list for probation teams #}

    {% set probationScheduleHtml %}
        {{ selectProbationTeamFromList(probationTeams, "scheduleProbationTeamCodes", room, formResponses, validationErrors) }}
    {% endset -%}

    {# Schedule row permissions #}

    {{ govukRadios({
        classes: "govuk-radios--small",
        idPrefix: "schedulePermission",
        name: "schedulePermission",
        errorMessage: validationErrors | findError('schedulePermission'),
        value: formResponses.schedulePermission or "court",
        fieldset: {
            legend: {
                text: "Select permissions",
                classes: 'govuk-fieldset__legend--m'
            }
        },
        items: [
            {
                value: "court",
                text: "Court",
                checked: formResponses.schedulePermission == 'court',
                conditional: {
                    html: courtScheduleHtml
                }
            },
            {
                value: "probation",
                text: "Probation",
                checked: formResponses.schedulePermission == 'probation',
                conditional: {
                    html: probationScheduleHtml
                }
            },
            {
                value: "blocked",
                text: "Blocked",
                checked: formResponses.schedulePermission == 'blocked'
            }
        ]
    }) }}

    {# Conditional HTNL to choose start and end times #}

    {% set timesHtml %}
        {{ hmppsTimePicker({
            id: 'scheduleStartTime',
            name: 'scheduleStartTime',
            label: {
                text: 'Start time',
                classes: 'govuk-fieldset__legend--s'
            },
            errorMessage: validationErrors | findError('scheduleStartTime'),
            formResponses: formResponses.scheduleStartTime
        }) }}

        {{ hmppsTimePicker({
            id: 'scheduleEndTime',
            name: 'scheduleEndTime',
            label: {
                text: 'End time',
                classes: 'govuk-fieldset__legend--s'
            },
            errorMessage: validationErrors | findError('scheduleEndTime'),
            formResponses: formResponses.scheduleEndTime
        }) }}
    {% endset %}

    {# Choice of all-day or manual entry of start/end times #}

    {{ govukRadios({
        classes: "govuk-radios--small",
        idPrefix: "allDay",
        name: "allDay",
        fieldset: {
            legend: {
                text: "Select times",
                classes: 'govuk-fieldset__legend--m'
            }
        },
        items: [
            {
                value: "Yes",
                text: "All day 8:00 to 18:00",
                checked: formResponses.allDay == 'Yes'
            },
            {
                value: "No",
                text: "Choose the times",
                checked: formResponses and formResponses.allDay != 'Yes',
                conditional: {
                    html: timesHtml
                }
            }
        ]
    }) }}

{% endmacro %}
